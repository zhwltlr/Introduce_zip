[
  {
    "id": 11,
    "githubUrl": "https://github.com/zhwltlr/let-s-Git-it-front",
    "projectImageUrl": "https://user-images.githubusercontent.com/100506719/224552142-ec95cf69-3561-4268-83f5-bcd1dc062cda.PNG",
    "underlineTitle": "깃헙 동기부여 서비스",
    "projectTitle": "let's GIT it",
    "projectStack": "React, TypeScript, SCSS",
    "projectExplanation": "크게 호기심(10%), 열정(20%), 능력(35%), 명성(35%) 4가지 지표와 그에 해당하는 세부지표, 총 14가지 지표로 깃헙 활동을 분석하여 동기부여 해주는 웹 서비스 입니다",
    "period": "2023-01 ~ 2023.03",
    "projectContent": [
      "랭킹 페이지 : 총점순으로 나타낸 TOP100 랭킹 페이지에서 th별 오름차순 내림차순 정렬 기능을 추가하였고, select box에서 사용자가 원하는 언어 클릭시 filtering된 데이터를 불러옵니다",
      "recoil을 사용하여 유저가 선택한 카테고리 state를 전역으로 관리, articleList와 article 상세 페이지 및 마이페이지 내가 쓴 글 목록에서 선택한 카테고리를 지속적으로 업데이트합니다",
      "쿼리 스트링을 활용하여 제목, 제목+글쓴이, 글쓴이 select 값과 사용자의 입력값에 따른 검색결과 기능 구현하였습니다."
    ]
  },
  {
    "id": 22,
    "githubUrl": "https://github.com/zhwltlr/naweke-react-firebase",
    "projectImageUrl": "https://user-images.githubusercontent.com/100506719/224535736-892e4b39-394d-4e27-9efe-672f601f2c17.png",
    "underlineTitle": "쇼핑몰 웹 서비스를 모델링한",
    "projectTitle": "NAWEKE",
    "projectStack": "React, SCSS, Firebase",
    "projectExplanation": "고객 운동 스타일에 맞는 UX 중심의 Naweke 편집숍 프로젝트입니다",
    "period": "2022-11 ~ 2022.11",
    "projectContent": [
      "Review 컴포넌트에서는 등록과 수정/삭제를 구분하는 상수데이터를 만든 후, controlReview(boolean) state에 따라 ReviewModal에 전달되는 데이터를 관리합니다.",
      "querystring을 활용하여 조건별 검색이 가능한 상품 리스트 페이지 구현하여 사용자 클릭할 때마다 fetch하여 검색 결과를 찾을 수 있도록 표현하였습니다.",
      "하나의 컴포넌트로 로그인 및 회원가입 관리 : User 컴포넌트 하나로 로그인과 회원가입을 관리하기 위해 각각의 본문 내용을 상수데이터로 만들어서 isSelectLogin state로 관리합니다."
    ]
  },
  {
    "id": 33,
    "githubUrl": "https://github.com/zhwltlr/wecode-project-admin",
    "projectImageUrl": "https://user-images.githubusercontent.com/100506719/224552138-e7e6d158-1d8f-4606-93dc-5f5b39259f84.png",
    "underlineTitle": "크롤링 데이터 관리하는",
    "projectTitle": "어드민 페이지 제작",
    "projectStack": "Vue, SCSS, AWS",
    "projectExplanation": "태그바이컴퍼니에서 기업협업으로 진행한 프로젝트로, 크롤링한 데이터를 정렬해주는 어드민 페이지를 제작하였습니다",
    "period": "2022-12 ~ 2023.01",
    "projectContent": [
      "캠페인이 고유하게 갖고 있는 index 번호를 조회하면, 해당하는 회사명과 캠페인명 데이터 출력, 이후 사용자가 임의로 변경하지 못하도록 disabled 처리, 키워드 입력은 정규표현식을 사용하여 공백 및 특수문자는 기입할 수 없게 처리했습니다.",
      "캠페인 고유의 index 번호를 endpoint로 하여 등록페이지와 같은 컴포넌트를 사용, 기존 등록한 데이터 값을 출력하여 사용자가 데이터를 확인할 수 있도록 설정, 수정한 값은 다시 저장하여 서버에 저장합니다.",
      "NginX를 사용하여 회사 AWS에 배포하여 안정적인 서비스를 제공합니다."
    ]
  },
  {
    "id": 44,
    "githubUrl": "https://github.com/zhwltlr/39-2nd-CGW-frontend",
    "projectImageUrl": "https://user-images.githubusercontent.com/100506719/224552145-7f9ca2d3-5bd1-4218-9d3c-2c52bbb7445f.png",
    "underlineTitle": "영화 예매 서비스를 모델링 한",
    "projectTitle": "CGW",
    "projectStack": "React, Stlyed-components",
    "projectExplanation": "사용자를 위한 더 간편한 예약 페이지를 구현한 프로젝트 입니다.",
    "period": "2022-11 ~ 2022.12",
    "projectContent": [
      "예매 완료 내역에 구글 지도 api를 이용하여 지도를 나타내어, 사용자의 현재 위치에서 영화관까지의 위치 및 소요시간 안내하여 사용자 활동 개선하였습니다.",
      "사용자의 편리성 증대를 위하여 카카오 api를 이용한 소셜 로그인 구현, 로그인에 성공했을시 카카오 api로 제공 받는 access_token 외 영화 예매를 위해 필요한 추가 정보 페이지를 구현하였습니다."
    ]
  }
]
